name: Deploy to VPS

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

    - name: Copy code to VPS
      run: |
        rsync -avz --delete ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:/root/app/
      env:
        RSYNC_RSH: "ssh -o StrictHostKeyChecking=no"

    - name: SSH and deploy (Docker Swarm)
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << 'EOF'
          set -e
          cd /root/app

          # Cria/atualiza variáveis de ambiente
          cat <<EOT > .env
          DOMAIN=${{ secrets.DOMAIN }}
          EMAIL=${{ secrets.EMAIL }}
          FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_SERVICE_ACCOUNT_KEY='${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          EOT

          # Build da imagem Docker
          docker build -t frontend:latest .

          # Deploy no Swarm (atualiza ou cria o serviço)
          docker service update --image frontend:latest myapp_frontend || \
          docker service create --name myapp_frontend frontend:latest

          # Se usar docker-compose.yml para stack deploy, substitua pelo comando abaixo:
          # docker stack deploy -c docker-compose.yml mystack
        EOF
